-- MySQL Script generated by MySQL Workbench
-- 01/22/17 12:34:01
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES,NO_AUTO_VALUE_ON_ZERO';

-- -----------------------------------------------------
-- Schema opennotes
-- -----------------------------------------------------
-- Autor: Wilman Ortiz Navarro
-- Fecha: 25-04-2016 12:07 PM
-- 
-- Descripción: Base de datos que permite almacenar la información de manera persistente del sistema de notas OpenNotes.
-- Contiene tablas para administrar la seguridad de la aplicación y el negocio como tal.
-- 
-- Nmonicos: 
-- 	1.- TBL_SEC: para identificar las tablas de seguridad
-- 	2.- TBL_OPS: para identificar las tablas de negocio
DROP SCHEMA IF EXISTS `opennotes` ;

-- -----------------------------------------------------
-- Schema opennotes
--
-- Autor: Wilman Ortiz Navarro
-- Fecha: 25-04-2016 12:07 PM
-- 
-- Descripción: Base de datos que permite almacenar la información de manera persistente del sistema de notas OpenNotes.
-- Contiene tablas para administrar la seguridad de la aplicación y el negocio como tal.
-- 
-- Nmonicos: 
-- 	1.- TBL_SEC: para identificar las tablas de seguridad
-- 	2.- TBL_OPS: para identificar las tablas de negocio
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `opennotes` DEFAULT CHARACTER SET utf8 COLLATE utf8_spanish_ci ;
USE `opennotes` ;

-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_acudiente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_acudiente` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_acudiente` (
  `id_acudiente` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `codigo_acudiente` BIGINT(255) NOT NULL,
  `nombre_acudiente` VARCHAR(100) NOT NULL,
  `apellido_acudiente` VARCHAR(100) NOT NULL,
  `telefono_acudiente` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_acudiente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_tipo_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_tipo_usuario` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_tipo_usuario` (
  `id_tipo_usuario` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `tipo_usuario` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_tipo_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_tipo_identificacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_tipo_identificacion` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_tipo_identificacion` (
  `id_tipo_identificacion` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `tipo_identificacion` VARCHAR(100) NOT NULL,
  `desc_identificacion` VARCHAR(100) NULL,
  PRIMARY KEY (`id_tipo_identificacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_eps`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_eps` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_eps` (
  `id_eps` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `descripcion_eps` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id_eps`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_nivel`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_nivel` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_nivel` (
  `id_nivel` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `descripcion_nivel` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`id_nivel`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_grupo` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_grupo` (
  `id_grupo` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `nombre_grupo` VARCHAR(100) NOT NULL,
  `cupo_grupo` INT NOT NULL,
  `id_nivel` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_grupo`),
  CONSTRAINT `grupo_nivel_fk`
    FOREIGN KEY (`id_grupo`)
    REFERENCES `opennotes`.`tbl_ops_nivel` (`id_nivel`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_sexo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_sexo` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_sexo` (
  `id_sexo` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `desc_sexo` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`id_sexo`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `desc_sexo_UNIQUE` ON `opennotes`.`tbl_ops_sexo` (`desc_sexo` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_sec_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_sec_users` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_sec_users` (
  `id_user` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL COMMENT 'Guarda información del usuario autenticado en el sistema de notas',
  `password` VARCHAR(100) NOT NULL,
  `enable` VARCHAR(45) NULL,
  `account_non_expired` VARCHAR(45) NULL,
  `credential_non_expired` VARCHAR(45) NULL,
  `account_non_locked` VARCHAR(45) NULL,
  `codigo_usuario` BIGINT(255) NOT NULL,
  `nombre_usuario` VARCHAR(100) NOT NULL,
  `apellido_usuario` VARCHAR(100) NOT NULL,
  `direccion_usuario` VARCHAR(512) NOT NULL,
  `edad_usuario` INT NULL,
  `telefono_usuario` BIGINT(255) NOT NULL,
  `email_usuario` VARCHAR(100) NOT NULL,
  `sisben_usuario` VARCHAR(100) NULL,
  `id_acudiente` BIGINT(255) NULL,
  `id_tipo_usuario` BIGINT(255) NULL,
  `id_tipo_identificacion` BIGINT(255) NULL,
  `id_profesor` BIGINT(255) NULL,
  `id_eps` BIGINT(255) NULL,
  `id_grupo` BIGINT(255) NULL,
  `id_sexo` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_user`),
  CONSTRAINT `acudiente_usuario_fk`
    FOREIGN KEY (`id_acudiente`)
    REFERENCES `opennotes`.`tbl_ops_acudiente` (`id_acudiente`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `usuario_tipo_usuario_fk`
    FOREIGN KEY (`id_tipo_usuario`)
    REFERENCES `opennotes`.`tbl_ops_tipo_usuario` (`id_tipo_usuario`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `usuario_tipo_identificacion_fk`
    FOREIGN KEY (`id_tipo_identificacion`)
    REFERENCES `opennotes`.`tbl_ops_tipo_identificacion` (`id_tipo_identificacion`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `estudiante_profesor_fk`
    FOREIGN KEY (`id_profesor`)
    REFERENCES `opennotes`.`tbl_sec_users` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `usuario_eps_fk`
    FOREIGN KEY (`id_eps`)
    REFERENCES `opennotes`.`tbl_ops_eps` (`id_eps`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `usuario_grupo_fk`
    FOREIGN KEY (`id_grupo`)
    REFERENCES `opennotes`.`tbl_ops_grupo` (`id_grupo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `usuario_sexo_fk`
    FOREIGN KEY (`id_sexo`)
    REFERENCES `opennotes`.`tbl_ops_sexo` (`id_sexo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `login_UNIQUE` ON `opennotes`.`tbl_sec_users` (`login` ASC);

CREATE INDEX `acudiente_usuario_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_acudiente` ASC);

CREATE INDEX `usuario_tipo_usuario_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_tipo_usuario` ASC);

CREATE INDEX `usuario_tipo_identificacion_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_tipo_identificacion` ASC);

CREATE INDEX `usuario_eps_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_eps` ASC);

CREATE UNIQUE INDEX `codigo_usuario_UNIQUE` ON `opennotes`.`tbl_sec_users` (`codigo_usuario` ASC);

CREATE INDEX `usuario_grupo_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_grupo` ASC);

CREATE INDEX `estudiante_profesor_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_profesor` ASC);

CREATE INDEX `usuario_sexo_fk_idx` ON `opennotes`.`tbl_sec_users` (`id_sexo` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_sec_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_sec_roles` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_sec_roles` (
  `id_role` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `role` VARCHAR(50) NULL,
  PRIMARY KEY (`id_role`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `role_UNIQUE` ON `opennotes`.`tbl_sec_roles` (`role` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_sec_user_roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_sec_user_roles` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_sec_user_roles` (
  `user_id` BIGINT(255) NOT NULL,
  `role_id` BIGINT(255) NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`),
  CONSTRAINT `user_role_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `opennotes`.`tbl_sec_users` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `role_user_fk`
    FOREIGN KEY (`role_id`)
    REFERENCES `opennotes`.`tbl_sec_roles` (`id_role`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `role_fk_idx` ON `opennotes`.`tbl_sec_user_roles` (`role_id` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_anio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_anio` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_anio` (
  `id_anio` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `anio` INT NOT NULL,
  PRIMARY KEY (`id_anio`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE UNIQUE INDEX `anio_UNIQUE` ON `opennotes`.`tbl_ops_anio` (`anio` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_periodo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_periodo` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_periodo` (
  `id_periodo` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `periodo` VARCHAR(45) NOT NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  `id_anio` BIGINT(255) NULL,
  PRIMARY KEY (`id_periodo`),
  CONSTRAINT `anio_periodo_fk`
    FOREIGN KEY (`id_anio`)
    REFERENCES `opennotes`.`tbl_ops_anio` (`id_anio`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `anio_periodo_fk_idx` ON `opennotes`.`tbl_ops_periodo` (`id_anio` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_matricula`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_matricula` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_matricula` (
  `id_matricula` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `fecha_matricula` TIMESTAMP(6) NOT NULL,
  `valor_matricula` DECIMAL NOT NULL,
  `cuotas_matricula` INT NOT NULL,
  `valor_cuotas` DECIMAL NOT NULL,
  `id_usuario` BIGINT(255) NOT NULL,
  `id_periodo` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_matricula`),
  CONSTRAINT `periodo_matricula_fk`
    FOREIGN KEY (`id_periodo`)
    REFERENCES `opennotes`.`tbl_ops_periodo` (`id_periodo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `usuario_matricula_fk`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `opennotes`.`tbl_sec_users` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `periodo_matricula_fk_idx` ON `opennotes`.`tbl_ops_matricula` (`id_periodo` ASC);

CREATE INDEX `usuario_matricula_fk_idx` ON `opennotes`.`tbl_ops_matricula` (`id_usuario` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_estado_pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_estado_pago` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_estado_pago` (
  `id_estado_pago` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `estado_pago` VARCHAR(100) NULL,
  PRIMARY KEY (`id_estado_pago`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_pagos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_pagos` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_pagos` (
  `id_pago` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `fecha_pago` TIMESTAMP(6) NOT NULL,
  `valor_pago` DECIMAL NOT NULL,
  `codigo_barras` VARCHAR(1024) NOT NULL,
  `id_estado_pago` BIGINT(255) NOT NULL,
  `id_matricula` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_pago`),
  CONSTRAINT `pago_matricula_fk`
    FOREIGN KEY (`id_estado_pago`)
    REFERENCES `opennotes`.`tbl_ops_matricula` (`id_matricula`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `pago_estado_fk`
    FOREIGN KEY (`id_estado_pago`)
    REFERENCES `opennotes`.`tbl_ops_estado_pago` (`id_estado_pago`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `pago_matricula_fk_idx` ON `opennotes`.`tbl_ops_pagos` (`id_estado_pago` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_sec_auditoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_sec_auditoria` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_sec_auditoria` (
  `id_auditoria` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `fecha_ingreso` TIMESTAMP(6) NULL,
  `fecha_salida` TIMESTAMP(6) NULL,
  `id_users` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_auditoria`),
  CONSTRAINT `user_auditoria_fk`
    FOREIGN KEY (`id_users`)
    REFERENCES `opennotes`.`tbl_sec_users` (`id_user`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `user_fk_idx` ON `opennotes`.`tbl_sec_auditoria` (`id_users` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_banco_logros`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_banco_logros` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_banco_logros` (
  `id_logro` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `codigo_logro` VARCHAR(45) NOT NULL,
  `descripcion_logro` VARCHAR(1024) NOT NULL,
  PRIMARY KEY (`id_logro`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_cortes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_cortes` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_cortes` (
  `id_corte` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `descripcion_corte` VARCHAR(100) NOT NULL,
  `fecha_corte` DATE NOT NULL,
  `id_periodo` BIGINT(255) NULL,
  PRIMARY KEY (`id_corte`),
  CONSTRAINT `periodo_cortes_fk`
    FOREIGN KEY (`id_periodo`)
    REFERENCES `opennotes`.`tbl_ops_periodo` (`id_periodo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `periodo_cortes_fk_idx` ON `opennotes`.`tbl_ops_cortes` (`id_periodo` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_notas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_notas` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_notas` (
  `id_notas` BIGINT(255) NOT NULL AUTO_INCREMENT,
  `quiz_1` DECIMAL NULL,
  `proyecto_1` DECIMAL NULL,
  `midterm` DECIMAL NULL,
  `examen_1` DECIMAL NULL,
  `quiz_2` DECIMAL NULL,
  `proyecto_2` DECIMAL NULL,
  `examen_final` DECIMAL NULL,
  `fecha_carga_notas` TIMESTAMP(6) NOT NULL,
  `id_corte` BIGINT(255) NOT NULL,
  `id_usuario` BIGINT(255) NOT NULL,
  PRIMARY KEY (`id_notas`),
  CONSTRAINT `notas_cortes_fk`
    FOREIGN KEY (`id_corte`)
    REFERENCES `opennotes`.`tbl_ops_cortes` (`id_corte`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `notas_cortes_fk_idx` ON `opennotes`.`tbl_ops_notas` (`id_corte` ASC);


-- -----------------------------------------------------
-- Table `opennotes`.`tbl_ops_reportes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `opennotes`.`tbl_ops_reportes` ;

CREATE TABLE IF NOT EXISTS `opennotes`.`tbl_ops_reportes` (
  `id_informe` BIGINT(255) NOT NULL,
  `id_usuario` BIGINT(255) NOT NULL,
  `id_cortes` BIGINT(255) NOT NULL,
  `id_notas` BIGINT(255) NOT NULL,
  `id_logros` BIGINT(255) NOT NULL,
  `fecha_informe` TIMESTAMP(6) NOT NULL,
  `observaciones` VARCHAR(1024) NOT NULL,
  PRIMARY KEY (`id_informe`, `id_usuario`, `id_cortes`, `id_notas`, `id_logros`),
  CONSTRAINT `reporte_cortes_fk`
    FOREIGN KEY (`id_cortes`)
    REFERENCES `opennotes`.`tbl_ops_cortes` (`id_corte`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `reporte_notas_fk`
    FOREIGN KEY (`id_notas`)
    REFERENCES `opennotes`.`tbl_ops_notas` (`id_notas`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `reporte_logros_fk`
    FOREIGN KEY (`id_logros`)
    REFERENCES `opennotes`.`tbl_ops_banco_logros` (`id_logro`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `reporte_cortes_fk_idx` ON `opennotes`.`tbl_ops_reportes` (`id_cortes` ASC);

CREATE INDEX `reporte_notas_fk_idx` ON `opennotes`.`tbl_ops_reportes` (`id_notas` ASC);

CREATE INDEX `reporte_logros_fk_idx` ON `opennotes`.`tbl_ops_reportes` (`id_logros` ASC);

SET SQL_MODE = '';
GRANT USAGE ON *.* TO opennotes;
 DROP USER opennotes;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES,NO_AUTO_VALUE_ON_ZERO';
CREATE USER 'opennotes' IDENTIFIED BY 'opennotes';

GRANT ALL ON `opennotes`.* TO 'opennotes';
GRANT SELECT ON TABLE `opennotes`.* TO 'opennotes';
GRANT SELECT, INSERT, TRIGGER ON TABLE `opennotes`.* TO 'opennotes';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `opennotes`.* TO 'opennotes';
GRANT EXECUTE ON ROUTINE `opennotes`.* TO 'opennotes';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
